include:
  # Automatically build Docker images
  - project: 'world/ci-templates'
    file: '/gitlab-ci/docker-v1.yml'
  # Use standard release to automatically trigger releases
  # See https://git.novadiscovery.net/world/ci-template/standard-release
  - project: 'world/ci-template/standard-release'
    ref: v2
    file: 'templates/.gitlab-ci-release-workflow.yml'
  - project: 'world/ci-template/standard-release'
    ref: v2
    file: '/templates/.gitlab-ci-release.yml'

stages:
  - build
  - test
  - release

# Make sure Cargo.nix file is up to date with Cargo.lock to ensure proper release
test-Cargo.nix:
  tags: [ nixos ]
  needs: []
  script:
    # we need the -f to make it non-interactive
    - nix run github:cargo2nix/cargo2nix/release-0.11.0 -- -f Cargo.nix2
    - diff Cargo.nix Cargo.nix2

variables:
  DOCKER_BUILDKIT: 1

# A simple test of Novops usage with files and variables
test:
  stage: test
  image: rust:1.64.0
  needs: []
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo_home
  script:
  - cargo test
  cache:
    key: rust-cargo-cache
    paths:
      - target
      - cargo_home/registry
  rules:
  - if: $CI_COMMIT_BRANCH != "master" && $CI_COMMIT_TAG == null

# Override standard-release to run on release stage (use standard-release stage by default)
# and run on master branch automatically
job:release:
  stage: release
  rules:
  - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG == null
  
