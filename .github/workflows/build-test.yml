name: Build and test

# Same jobs are used for testing or releasing
on:
  push:
    branches:
      - main
    tags: 
      - "v*.*.*"
  pull_request:
  workflow_dispatch:

jobs:
  
  cargo-build:
    name: cargo build, test & doc
    runs-on: ubuntu-latest
    if: "! startsWith(github.event.ref, 'refs/tags/v')" # No need to run on release
    steps:
      - uses: actions/checkout@v3

      # cache
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - uses: cachix/cachix-action@v12
        with:
          name: novops
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-${{ runner.arch }}-cargo
      
      - uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/containers/storage/
          key: ${{ runner.os }}-${{ runner.arch }}-podman

      # build and test
      - run: nix develop -c make test

      # doc
      - name: Setup Pages # Useful? Not sure
        uses: actions/configure-pages@v3

      - name: build mdBook site
        run: nix develop -c make doc
      
      - name: Upload mdBook artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/book

  image-build:
    name: container image & static binary build
    if: github.ref != 'refs/heads/main'  # No need to run on main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - uses: cachix/cachix-action@v12
        with:
          name: novops
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - uses: actions/cache@v3
        with:
          path: |
            build/cache
          key: ${{ runner.os }}-${{ runner.arch }}-podman
      
      - run: nix develop -c make build-image build-binary

      - name: Upload built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: novops-build
          if-no-files-found: error
          path: |
            build/novops
            build/novops.zip
            build/novops.zip.sha256sum
            build/image.tar

  test-novops-cli:
    name: run novops commands
    runs-on: ubuntu-latest
    needs: image-build
    steps:
      - uses: actions/checkout@v3

      - name: download novops artifacts
        uses: actions/download-artifact@v3
        with:
          name: novops-build
          path: build

      - name: novops load
        run: |
          ls -al build
          chmod +x build/novops
          build/novops load -c tests/.novops.plain-strings.yml -s .envrc -e dev 
          cat .envrc >> "$GITHUB_ENV"
      
      - name: check novops loaded values
        run: env | grep MY_APP_HOST

      - name: novops run and check var
        run: |
          build/novops run -c tests/.novops.plain-strings.yml -e dev -- sh -c "env | grep DOG_PATH"

  # 
  # main / release only
  #

  # Deploy doc from main branch
  doc-deploy:
    name: doc deploy
    permissions:
      contents: read
      pages: write
      id-token: write
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: cargo-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Update / create release from main branch
  release-please:
    name: release please
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - uses: cachix/cachix-action@v12
        with:
          name: novops
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - run: nix develop -c make release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  # Upload artifacts for release tags
  release-artifacts:
    name: publish release artifacts
    permissions:
      contents: write
      pull-requests: write
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      
      - name: download novops artifacts
        uses: actions/download-artifact@v3
        with:
          name: novops-build
          path: build

      - run: nix develop -c make docker-publish

      - run: nix develop -c make release-artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}